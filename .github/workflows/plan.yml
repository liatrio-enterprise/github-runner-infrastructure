name: Terragrunt Plan

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    container: ghcr.io/liatrio-cloud/runner-images/terraform-1.0:v1.1.2

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform fmt check
        run: terraform fmt -check -recursive

      - name: Terraform validate
        run: terraform validate
        env:
          ARM_CLIENT_ID : ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          TF_VAR_arm_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_arm_tenant_id: ${{ secrets.ARM_TENANT_ID }}

  plan:
    runs-on: ubuntu-latest
    container: ghcr.io/liatrio-cloud/runner-images/terraform-1.0:v1.1.2
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Terragrunt plan
        run: |
          terragrunt run-all plan --terragrunt-working-dir ./live/sandbox > logs.txt
          echo "##[set-output name=modified_terraform;]$(cat logs.txt | grep "No changes. Infrastructure is up-to-date." || true)"
        id: plan
        env:
          ARM_CLIENT_ID : ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          TF_VAR_arm_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_arm_tenant_id: ${{ secrets.ARM_TENANT_ID }}
    
  pullRequestComment:
    name: Comment on PR
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs:
      - plan
    steps:
      - name: Pull Request Comment
        if: contains( ${{ needs.plan.outputs.modified_terraform }}, 'No changes. Infrastructure is up-to-date.')
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "This PR will modify the currently deployed application in Azure"
